
- name: make sure /srv/node exists
  file: path=/srv/node state=directory

- name: make sure /var/swift/recon exists
  file: path=/var/swift/recon state=directory owner=swift group=swift mode=0750

- name: check if losetup loop1 is already up
  shell: mount | grep "loop1 "
  register: losetup
  ignore_errors: True
  changed_when: losetup.rc > 0
  tags:
    - remount_loop_devices

#
# Remove disks
#

- name: umount swift disks
  mount: name=/srv/node/{{ disk_prefix }}{{ item }} state=unmounted src=/dev/loop{{ item }} fstype=xfs
  when: "losetup.rc > 0"

- name: remove /srv/node/* disk device directories
  file: state=absent path=/srv/node/{{ disk_prefix }}{{ item }}
  when: "losetup.rc > 0"

#- name: remove loop devices
#  command: losetup -d /dev/loop{{ item }}
#  with_sequence: count={{ disks }}
#  when: "losetup.rc > 0"

- name: remove sparse images
  file: state=absent path=/var/tmp/{{ disk_prefix }}{{ item }}.img
  with_sequence: count={{ disks }}
  when: "losetup.rc > 0"

#
# Create disks
#

- name: create sparse images
  command: truncate --size {{ loop_disk_size }}G /var/tmp/{{ disk_prefix }}{{ item }}.img
  with_sequence: count={{ disks }}
  when: "losetup.rc > 0"

- name: setup loop devices
  command: losetup /dev/loop{{ item }} /var/tmp/{{ disk_prefix }}{{ item }}.img
  with_sequence: count={{ disks }}
  when: "losetup.rc > 0"
  tags:
    - remount_loop_devices

- name: create file system on loop devices
  shell: mkfs.xfs -i size=1024 /dev/loop{{ item }}; mkdir /srv/node/{{ disk_prefix }}{{ item }};
  with_sequence: count={{ disks }}
  when: "losetup.rc > 0"

- name: make /srv/node disk device directories
  file:  state=directory path=/srv/node/{{ disk_prefix }}{{ item }} owner=swift group=swift mode=0770
  with_sequence: count={{ disks }}
  when: "losetup.rc > 0"

# NOTE: Would likely not want the nobootwait in production, but in virtualbox the loop devices won't be setup yet so it won't be able to reboot without that setting, assuming the mount points are setup in /etc/fstab
# NOTE: later on removed nobootwait b/c didn't work on redhat
- name: mount swift disks
  mount: name=/srv/node/{{ disk_prefix }}{{ item }} state=mounted src=/dev/loop{{ item }} opts="noatime,nodiratime,nobarrier" fstype=xfs
  with_sequence: count={{ disks }}
  when: "losetup.rc > 0"
  tags:
    - remount_loop_devices

- name: set permissions on /srv/node/* after being mounted
  file: state=directory path=/srv/node/{{ disk_prefix }}{{ item }} owner=swift group=swift mode=0770
  with_sequence: count={{ disks }}
  when: "losetup.rc > 0"
  tags:
    - remount_loop_devices

#
# Configure rsync
#

- name: copy over rsyncd.conf to swift storage
  template: src=rsyncd.conf.j2 dest=/etc/rsyncd.conf

- name: make sure rsync is running
  service: name=rsync state=started

#
# Configure swift storage processes
#

- name: ensure *-server directories exist in /etc/swift
  file: path=/etc/swift/{{ item }}-server state=directory owner=swift group=swift mode=0755
  with_items:
    - account
    - container
    - object

- name: copy over *-server.conf files
  template: src={{ item }}-server.conf.j2 dest=/etc/swift/{{ item }}-server/{{ item }}-server.conf owner=swift group=swift mode=0644
  with_items:
    - account
    - container
    - object

- name: copy over *-replication.conf files
  template: src={{ item }}-replication.conf.j2 dest=/etc/swift/{{ item }}-server/{{ item }}-replication.conf owner=swift group=swift mode=0644
  with_items:
    - account
    - container
    - object
